@model IEnumerable<SliderModel>
@{
    ViewData["title"] = "List Slider";
    Paginate pager = new Paginate();

    int pageNo = 0; // So tran dau tien = 0

    if (ViewBag.Pager != null) // Đang co trang
    {
        pager = ViewBag.Pager;

        pageNo = pager.CurrentPage;
    }
}
<h4>List Slider </h4>
@* thêm sửa xóa sp: *@
<a class="btn btn-warning btn-sm" asp-action="Create" asp-controller="Slider">Add Slider</a>
<table class="table" id="myTable">
    <thead>
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Slider Name</th>
            <th scope="col">Slider Description</th>

            <th scope="col">Slider Image</th>
            <th scope="col">Slider Status</th>
            <th scope="col">Action</th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @* hiển thị sp từ csdl dưới dạng 1 bảng: sau này khi chèn thêm các sp vào csdl nó sẽ in ra thông  tin ở đây  *@
                <th scope="row">@item.Id</th>
                <td>@item.Name</td>

                @* Phương thức Html.Raw() sẽ render thô nội dung HTML thay vì escape các ký tự đặc biệt *@
                <td>@Html.Raw(@item.Description)</td>

                <td><img src="~/media/sliders/@item.Image" width="400px" height="200px"/></td>
                <td>
                    @if (item.Status == 1)
                    {
                        <span class="text text-success">Hiển thị</span>
                    }
                    else
                    {
                        <span class="text text-danger">Ẩn</span>
                    }
                </td>

                <td>
                    @* chỉnh sửa or xóa sp trong admin nó sẽ dựa vào id của sp đó, từ id đó trả  về thông tin sp *@
                    <a asp-action="Edit" class="btn btn-warning btn-sm" asp-controller="Slider" asp-route-Id="@item.Id">Edit</a>
                    <a asp-action="Delete" class="btn btn-danger btn-sm confirmDeletion" asp-controller="Slider" asp-route-Id="@item.Id">Delete</a>
                </td>
            </tr>

        }
    </tbody>

</table>
@* database JS: tìm kiếm dữ liệu từ bảng có id="mytable" ở trên
	-VD ta có thể nhập tên, id, mã sp ... miến có thông tin nào khớp nó sẽ hiển thị ra sp đó
    -lưu ý về lỗi số cột không khớp với tiêu đề bảng:
    Lỗi "Incorrect column count" xảy ra vì số lượng cột thực tế trong bảng không khớp với số lượng tiêu đề trong phần <thead>. Hiện tại trong bảng của bạn có 5 tiêu đề
        (các cột: STT, Brand Name, Brand Description, Brand Slug, Brand Status), nhưng phần dữ liệu bên trong bảng có thêm một cột thao tác chứa các nút "Edit" và "Delete".
        Điều này khiến số lượng cột dữ liệu nhiều hơn số lượng tiêu đề, dẫn đến lỗi.
        => có 5 tiêu đề mà chỉ csó 4 cột => DB table JS ko hoạt động
        Cách khắc phục:
        Bạn cần thêm một cột tiêu đề trong phần <thead> để khớp với cột thao tác ở phần <tbody>. Cột này có thể được đặt tên là "Actions" hoặc "Operations".
	*@
@section Scripts {
    <script>
        //nó gọi đến id của thẻ table ở trên =>> render ra thông tin theo dạng bảng này để tìm
        let table = new DataTable('#myTable', {
            layout: {
                topStart: {
                    buttons: ['copy', 'csv', 'excel', 'pdf', 'print']
                }
            }
        });
    </script>
}
<partial name="_paging" model="@pager"></partial>